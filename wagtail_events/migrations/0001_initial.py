# Generated by Django 4.2.1 on 2023-08-28 09:22

from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0083_workflowcontenttype'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('paginate_by', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Event index page',
                'verbose_name_plural': 'Event index pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('start_date', models.DateTimeField(help_text='Event start time')),
                ('end_date', models.DateTimeField(blank=True, help_text='Event end time', null=True)),
                ('event_website', models.URLField(blank=True, help_text='Optional external link for the event or programme', null=True)),
                ('venue', models.TextField(blank=True, help_text='The event venue', null=True)),
                ('venue_website', models.URLField(blank=True, help_text='Link to the venue (or, say, a google maps pin)', null=True)),
                ('description', models.TextField(blank=True, help_text='Briefly describe your event', max_length=400)),
                ('body', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(help_text="Add optional subheadings between paragraphs, if you're describing the event series in more detail", label='Subheading', max_length=120, required=False)), ('paragraph', wagtail.blocks.TextBlock(help_text='Tell people about the event series', label='Text', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(help_text='Add images to describe the event series.', label='Image', required=False)), ('quote', wagtail.blocks.BlockQuoteBlock(help_text='Add an inspirational quote!', label='Quote', required=False))], blank=True, help_text='Optional: Add further description of this event.', use_json_field=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'ordering': ['start_date'],
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
